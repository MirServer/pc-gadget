#cloud-config
datasource_list: [NoCloud]

users:
  # Create the `frame` user, with no means to log in interactively
  #
  # For debugging in development, you can chang the shell and add a password
  # and/or a public SSH key to allow login.
  - name: frame
    shell: /bin/false

write_files:
  - path: '/etc/systemd/system/user-session.service'
    content: |
        [Unit]
        # Only start after user sessions are available
        #
        # https://www.freedesktop.org/software/systemd/man/systemd-user-sessions.service.html
        After=systemd-user-sessions.service

        [Service]
        # Start a login session for the `frame` user on tty1
        #
        # https://www.freedesktop.org/software/systemd/man/systemd.service.html
        User=frame
        PAMName=login
        TTYPath=/dev/tty1

        # Start the custom user session components within the user session,
        # and keep it running
        #
        # https://www.freedesktop.org/software/systemd/man/systemd.exec.html
        ExecStart=/usr/bin/systemctl --user --wait start frame-session.target
        Restart=always

        # If enabled, start it when the system is ready for a graphical session
        #
        # https://www.freedesktop.org/software/systemd/man/systemd.special.html#graphical.target
        [Install]
        WantedBy=graphical.target

  # Run and restart Ubuntu Frame
  - path: '/etc/systemd/user/ubuntu-frame.service'
    content: |
        [Unit]
        # Stop it if the graphical session quits
        PartOf=graphical-session.target

        [Service]
        ExecStart=/snap/bin/ubuntu-frame
        StandardError=journal
        Restart=always

  # Run and restart GLMark2, with a second in between restarts in case it's Frame that went away
  - path: '/etc/systemd/user/glmark2.service'
    content: |
        [Service]
        ExecStart=/snap/bin/graphics-test-tools.glmark2-es2-wayland
        Restart=always
        RestartSec=1s

  # And restart Flutter Gallery in the same way
  - path: '/etc/systemd/user/app-flutter\x2dgallery_flutter\x2dgallery@autostart.service.d/override.conf'
    content: |
        [Service]
        Restart=always
        RestartSec=1s

  - path: '/etc/systemd/user/frame-session-pre.service'
    content: |
        [Unit]
        Description=Set up the Ubuntu Frame session environment
        # Set the session environment before the session itself starts
        #
        # https://www.freedesktop.org/software/systemd/man/systemd.special.html#graphical-session-pre.target
        Before=graphical-session-pre.target

        [Service]
        # These are convenience variables that help the session resemble what applications expect,
        # or tells them to run with Wayland rather than X11
        Environment=GSETTINGS_BACKEND=keyfile
        Environment=GTK_A11Y=none
        Environment=GTK_USE_PORTAL=0
        Environment=LANG=en_EN.UTF-8
        Environment=MOZ_ENABLE_WAYLAND=1
        Environment=QT_QPA_PLATFORM=wayland
        Environment=WAYLAND_DISPLAY=wayland-0
        Environment=XDG_CURRENT_DESKTOP=UbuntuFrame:GNOME
        Environment=XDG_SESSION_TYPE=wayland
        # Propagate the environment to the SystemD session and DBus
        ExecStart=/usr/bin/dbus-update-activation-environment --systemd --all

  - path: '/etc/systemd/user/frame-session.target'
    content: |
        [Unit]
        Description=Invoke the Ubuntu Frame session components
        # Define what the user session should start, and stop it when the graphical session is stopped,
        # this way the login session stops, too
        #
        # https://www.freedesktop.org/software/systemd/man/systemd.special.html#graphical-session.target
        BindsTo=graphical-session.target
        Wants=graphical-session-pre.target frame-session-pre.service ubuntu-frame.service
        Wants=xdg-desktop-autostart.target
        # or
        # Wants=ubuntu-frame.service glmark2.service

runcmd:
  # Run the additional setup steps from the script
  - /snap/pc/current/extra-setup.sh

# Reboot after all the above is complete
power_state:
  mode: reboot
  message: "System is going to reboot for initialization"
